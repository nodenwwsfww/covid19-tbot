from main import bot, dp

from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.dispatcher.filters import Command, Text
from random import choice
from COVID19Py import COVID19
covid19 = COVID19()

start_markup = ReplyKeyboardMarkup(row_width=2)
button_news = KeyboardButton('üì®–ù–æ–≤–æ—Å—Ç–∏')
button_stats = KeyboardButton('üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
button_help = KeyboardButton('üÜò–ü–æ–º–æ—â—å')
button_random_tip = KeyboardButton('üé≤–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç')
start_markup.row(button_news, button_stats)
start_markup.row(button_help, button_random_tip)

@dp.message_handler(commands=['start'])
async def send_start_message(message:Message):
    text = f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!\n" \
           f"–Ø {(await bot.get_me()).first_name} ‚Äî —Ç–≤–æ–π –ø–æ–º–æ—â–Ω–∏–∫ –≤ –±–æ—Ä—å–±–µ —Å –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–æ–º"
    await message.answer(text, reply_markup=start_markup)

@dp.message_handler(Text(equals=["üì®–ù–æ–≤–æ—Å—Ç–∏", "üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", "üÜò–ü–æ–º–æ—â—å", "üé≤–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç"]))
async def menu_switch_handler(message: Message):

    if message.text == 'üì®–ù–æ–≤–æ—Å—Ç–∏':
        await send_news_message(message)

    elif message.text == 'üìà–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞':
        await send_statistic_message(message)

    elif message.text == 'üÜò–ü–æ–º–æ—â—å':
        await send_help_message(message)

    elif message.text == 'üé≤–°–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç':
        await send_random_tip(message)

@dp.message_handler(Command('news'))
async def send_news_message(message: Message):
    pass

@dp.message_handler(Command('statistic'))
async def send_statistic_message(message: Message):
    data = covid19.getAll(timelines=True)
    latest = data['latest']
    changes = covid19.getLatestChanges()

    text_line_first = '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –∫–æ—Ä–æ–Ω–∞–≤–∏—Ä—É—Å–∞ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É\n\n'
    text_line_second = f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤: {latest[0]['confirmed']} (+{changes['confirmed']})"
    text_line_third = f"\n–°–º–µ—Ä—Ç–µ–π: {latest['deaths']} (+{changes['deaths']})"
    text_line_fourth = f"\n–í—ã–∑–¥–æ—Ä–æ–≤–ª–µ–Ω–∏–π: {latest['recovered']}(+{changes['recovered']})\n\n"
    await message.answer(text=text_line_first + text_line_second + text_line_third + text_line_fourth)

@dp.message_handler(Command('help'))
async def send_help_message(message: Message):
    text = "–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:" \
           "\n/menu ‚Äî –ú–µ–Ω—é\n/news ‚Äî –ù–æ–≤–æ—Å—Ç–∏\n/stats ‚Äî –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞\n" \
           "/help ‚Äî –ü–æ–º–æ—â—å\n/tip ‚Äî –°–ª—É—á–∞–π–Ω—ã–π —Å–æ–≤–µ—Ç"

    await message.answer(text=text)

@dp.message_handler(Command('tip'))
async def send_random_tip(message: Message):
    useful_tips = ["stickers/AvoidCrowds.tgs", "stickers/DontTouchYourFace.tgs", "stickers/HomeAlone.tgs"
                                                                                 "stickers/KeepDistance.tgs",
                   "stickers/KeepThemSafe.tgs", "stickers/NoHugs.tgs",
                   "stickers/StayHome.tgs", "stickers/WashYourHands.tgs"]

    sticker = open(choice(useful_tips), 'rb')
    await bot.send_sticker(message.from_user.id, sticker)